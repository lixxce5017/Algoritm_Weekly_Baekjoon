#include<iostream>
#include<algorithm>
#include<vector>
#include <string>
#include<queue>
using namespace std;;
vector<int> v[100001];
int visited2[100001] = { 0, };
int result[100002];
queue<int> q;
int cnt=0;

bool compare(int a, int b)
{
	return a > b;
}


void bfs(int r)
{
	q.push(r);
	visited2[r] = 1;
	cnt++;
	result[r] = cnt;
	while (!q.empty())
	{

		int f = q.front();
		q.pop();
		for (int i = 0; i < v[f].size(); i++)
		{
			int temp = v[f][i];
			if (!visited2[temp])
			{
				cnt++;
				result[temp] = cnt;
				q.push(temp);
				visited2[temp] = 1;
			}

		}


	}

}


int main()
{
	int n, m, r;
	cin >> n >> m >> r;
	for (int i = 1; i <= m; i++)
	{
		int a, b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for (int i = 1; i <= n; i++)
	{
		sort(v[i].begin(), v[i].end(), compare);
	}

	bfs(r);

	for (int i = 1; i <= n; i++)
	{
		cout << result[i] << "\n";
	}

	return 0;
}

